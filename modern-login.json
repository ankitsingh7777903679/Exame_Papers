{
  "posts": [
    {
      "image": "./images/Animated-Slider.png",
      "card-title": "Animated Image Gallery",
      "card-text": "By Coder.in | 15 March 2025",
      "button-name": "HTML & CSS",
      "description": "This webpage showcases an animated image gallery with a stylish hover effect. It features a dark-themed background that enhances the vibrant images in the gallery. The layout consists of a flexbox-based container that holds multiple image cards. Each card has a smooth animation, expanding when hovered while shrinking the others and applying a grayscale filter. The odd-numbered images shift slightly upward, while the even-numbered ones move slightly downward, creating a dynamic effect. The page is fully responsive, ensuring a seamless experience across different screen sizes.",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Animated Image Gallery</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"card\">\n        <img src=\"https://i.pinimg.com/736x/b1/f0/03/b1f0039549f391ff5d051d32e93a1d2a.jpg\">\n      </div>\n      <div class=\"card\">\n        <img src=\"https://i.pinimg.com/736x/8a/39/ae/8a39ae0a8a63d5aa719c128cc8ebf9f5.jpg\">\n      </div>\n      <div class=\"card\">\n        <img src=\"https://i.pinimg.com/474x/32/5b/21/325b21b7e88537446943bf1a509e0e7f.jpg\">\n      </div>\n      <div class=\"card\">\n        <img src=\"https://i.pinimg.com/474x/7f/dd/0d/7fdd0d775f74dc5b4c40e96445dd290a.jpg\">\n      </div>\n      <div class=\"card\">\n        <img src=\"https://i.pinimg.com/736x/ed/14/ea/ed14ea822462d93c926056fcfd9db4c5.jpg\">\n      </div>\n    </div>\n  </body>\n</html>",
      "css-code": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #151f28;\n}\n\n.container {\n  width: 70%;\n  max-width: 800px;\n  height: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  gap: 1.25rem;\n  transition: all 400ms;\n}\n\n.card {\n  flex: 1;\n  height: 100%;\n  transition: all 400ms;\n  cursor: pointer;\n}\n.card > img {\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.card {\n  flex: 1;\n  height: 100%;\n  transition: all 400ms;\n  cursor: pointer;\n}\n.card:nth-child(odd) {\n  translate: 0 -20px;\n}\n.card:nth-child(even) {\n  translate: 0 20px;\n}\n.container:hover .card:not(:hover) {\n  filter: grayscale(100%);\n}\n.card:hover {\n  flex: 3;\n}"
    },
    {
      "image": "./images/login.png",
      "card-title": "How to make Modern Login Form",
      "card-text": "By Coder.in | 15 March 2025",
      "button-name": "HTML & CSS",
      "description": "Discover how to build a stylish modern login form using HTML and CSS, featuring glowing effects and fluid animations. This tutorial enhances your login page with a contemporary and engaging design.",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <title>Document</title>\n</head>\n<body>\n    <!--ring div starts here-->\n<div class=\"ring\">\n    <i style=\"--clr:#00ff0a;\"></i>\n    <i style=\"--clr:#ff0057;\"></i>\n    <i style=\"--clr:#fffd44;\"></i>\n    <div class=\"login\">\n      <h2>Login</h2>\n      <div class=\"inputBx\">\n        <input type=\"text\" placeholder=\"Username\">\n      </div>\n      <div class=\"inputBx\">\n        <input type=\"password\" placeholder=\"Password\">\n      </div>\n      <div class=\"inputBx\">\n        <input type=\"submit\" value=\"Sign in\">\n      </div>\n      <div class=\"links\">\n        <a href=\"#\">Forget Password</a>\n        <a href=\"#\">Signup</a>\n      </div>\n    </div>\n  </div>\n  <!--ring div ends here-->\n</body>\n</html>",
      "css-code": "/* author: https://codepen.io/Gogh/pen/gOqVqBx\nVincent Van Goggles */\n@import url(\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Quicksand\", sans-serif;\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: #111;\n  width: 100%;\n  overflow: hidden;\n}\n.ring {\n  position: relative;\n  width: 500px;\n  height: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.ring i {\n  position: absolute;\n  inset: 0;\n  border: 2px solid #fff;\n  transition: 0.5s;\n}\n.ring i:nth-child(1) {\n  border-radius: 38% 62% 63% 37% / 41% 44% 56% 59%;\n  animation: animate 6s linear infinite;\n}\n.ring i:nth-child(2) {\n  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;\n  animation: animate 4s linear infinite;\n}\n.ring i:nth-child(3) {\n  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;\n  animation: animate2 10s linear infinite;\n}\n.ring:hover i {\n  border: 6px solid var(--clr);\n  filter: drop-shadow(0 0 20px var(--clr));\n}\n@keyframes animate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes animate2 {\n  0% {\n    transform: rotate(360deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n.login {\n  position: absolute;\n  width: 300px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n}\n.login h2 {\n  font-size: 2em;\n  color: #fff;\n}\n.login .inputBx {\n  position: relative;\n  width: 100%;\n}\n.login .inputBx input {\n  position: relative;\n  width: 100%;\n  padding: 12px 20px;\n  background: transparent;\n  border: 2px solid #fff;\n  border-radius: 40px;\n  font-size: 1.2em;\n  color: #fff;\n  box-shadow: none;\n  outline: none;\n}\n.login .inputBx input[type=\"submit\"] {\n  width: 100%;\n  background: #0078ff;\n  background: linear-gradient(45deg, #ff357a, #fff172);\n  border: none;\n  cursor: pointer;\n}\n.login .inputBx input::placeholder {\n  color: rgba(255, 255, 255, 0.75);\n}\n.login .links {\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n}\n.login .links a {\n  color: #fff;\n  text-decoration: none;\n}"
    },
    {
      "image": "./images/home-game.png",
      "card-title": "How to make Modern Game",
      "card-text": "By Coder.in | 15 March 2025",
      "button-name": "HTML, CSS & JS",
      "description": "It looks like you're working on a maze game where a player moves a character ('thingie' ü•∫) using buttons or arrow keys to reach a goal ('home' üè†). The game dynamically generates a maze and enforces movement constraints using barriers.",
      "html-code": "<div id=\"container\">\n    <div class=\"mbox\">\n        <div id=\"maze\">\n            <div id=\"thingie\">\n                <div class=\"emo\" id=\"emo\">ü•∫</div>\n            </div>\n            <div id=\"home\">\n                <div class=\"emo\">üè†</div>\n            </div>\n            <div class=\"barrier\" id=\"top\"></div>\n            <div class=\"barrier\" id=\"bottom\"></div>\n        </div>\n    </div>\n    <div class=\"controls\">\n        <div class=\"buttons\">\n            <button class=\"btn\" id=\"bu\"><div class=\"chevron\">‚Üë</div></button>\n            <button class=\"btn\" id=\"bd\"><div class=\"chevron\">‚Üì</div></button>\n            <button class=\"btn\" id=\"bl\"><div class=\"chevron\">‚Üê</div></button>\n            <button class=\"btn\" id=\"br\"><div class=\"chevron\">‚Üí</div></button>\n        </div>\n    </div>\n</div>",
      "css-code": "body {\n    touch-action: pan-y;\n}\n#container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: #222;\n    display: grid;\n    grid-template-rows: 60% 40%;\n}\n\n#maze {\n    position: absolute;\n    width: 340px;\n    height: 240px;\n    top: 30vh;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.mbox,\n.controls {\n    height: 100%;\n    background: #222;\n    display: grid;\n}\n\n.buttons {\n    width: 210px;\n    height: 140px;\n    background: #222;\n    align-self: center;\n    justify-self: center;\n    display: grid;\n    grid-template-rows: 70px 70px;\n    grid-template-columns: 70px 70px 70px;\n}\n\n.btn {\n    width: 60px;\n    height: 60px;\n    border: 2px #fff solid;\n    align-self: center;\n    justify-self: center;\n    cursor: pointer;\n    border-radius: 8px;\n    display: grid;\n}\n.chevron {\n    height: 20px;\n    width: 20px;\n    align-self: center;\n    justify-self: center;\n    color: #fff;\n    font-size: 20px;\n    line-height: 20px;\n    text-align: center;\n}\n\n#bu {\n    grid-column-start: 2;\n}\n#bd {\n    grid-column-start: 2;\n    grid-row-start: 2;\n}\n#bl {\n    grid-column-start: 1;\n    grid-row-start: 2;\n}\n#br {\n    grid-column-start: 3;\n    grid-row-start: 2;\n}\n\n#thingie,\n#home {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n}\n\n.emo {\n    position: absolute;\n    top: 4px;\n    left: 1px;\n    width: 13px;\n    height: 13px;\n    font-size: 15px;\n    line-height: 15px;\n    text-align: left;\n}\n\n.barrier {\n    position: absolute;\n    background: #fff;\n}\n\n#top {\n    top: 20px;\n    left: 20px;\n    width: 300px;\n    height: 2px;\n}\n\n#bottom {\n    top: 220px;\n    left: 20px;\n    width: 302px;\n    height: 2px;\n}\n\n/*style reset*/\nbutton {\n    display: inline-block;\n    border: none;\n    padding: none;\n    margin: 0;\n    outline: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background: none;\n    -webkit-tap-highlight-color: transparent;\n}\n\nbutton:hover,\nbutton:focus {\n    -webkit-appearance: none;\n}\n\nbutton:focus {\n    outline: none;\n}\n\nbutton:active {\n    transform: scale(1);\n    -webkit-appearance: none;\n}",
      "js-code": "const cont = document.getElementById(\"container\");\nconst maze = document.getElementById(\"maze\");\nconst thingie = document.getElementById(\"thingie\");\nconst home = document.getElementById(\"home\");\nconst emo = document.getElementById(\"emo\");\n\nconst bu = document.getElementById(\"bu\");\nconst bd = document.getElementById(\"bd\");\nconst bl = document.getElementById(\"bl\");\nconst br = document.getElementById(\"br\");\n\nconst step = 20;\nconst size = 20;\nconst bwidth = 2;\nconst mazeHeight = 200;\nconst mazeWidth = 300;\nlet nogoX = [];\nlet nogoX2 = [];\nlet nogoY = [];\nlet nogoY2 = [];\nlet prevDist = mazeWidth * 2;\n\ngenSides();\n\nlet my = mazeHeight / step;\nlet mx = mazeWidth / step;\n\nlet grid = [];\nfor (let i = 0; i < my; i++) {\n    let sg = [];\n    for (let a = 0; a < mx; a++) {\n        sg.push({ u: 0, d: 0, l: 0, r: 0, v: 0 });\n    }\n    grid.push(sg);\n}\n\nlet dirs = [\"u\", \"d\", \"l\", \"r\"];\nlet modDir = {\n    u: { y: -1, x: 0, o: \"d\" },\n    d: { y: 1, x: 0, o: \"u\" },\n    l: { y: 0, x: -1, o: \"r\" },\n    r: { y: 0, x: 1, o: \"l\" },\n};\n\ngenMaze(0, 0, 0);\ndrawMaze();\n\nconst barriers = document.getElementsByClassName(\"barrier\");\nfor (let b = 0; b < barriers.length; b++) {\n    nogoX.push(barriers[b].offsetLeft);\n    nogoX2.push(barriers[b].offsetLeft + barriers[b].clientWidth);\n    nogoY.push(barriers[b].offsetTop);\n    nogoY2.push(barriers[b].offsetTop + barriers[b].clientHeight);\n}\n\ndocument.addEventListener(\"keydown\", keys);\n\nfunction keys(e) {\n    let code = e.code;\n    switch (code) {\n        case \"ArrowUp\": up(); break;\n        case \"ArrowDown\": down(); break;\n        case \"ArrowLeft\": left(); break;\n        case \"ArrowRight\": right(); break;\n        case \"KeyW\": up(); break;\n        case \"KeyS\": down(); break;\n        case \"KeyA\": left(); break;\n        case \"KeyD\": right(); break;\n    }\n}\n\nbu.addEventListener(\"click\", (e) => { up(); });\nbd.addEventListener(\"click\", (e) => { down(); });\nbl.addEventListener(\"click\", (e) => { left(); });\nbr.addEventListener(\"click\", (e) => { right(); });\n\nfunction up() { if (checkYboundry(\"u\")) { thingie.style.top = thingie.offsetTop - step + \"px\"; updateEmo(false); } }\nfunction down() { if (checkYboundry(\"d\")) { thingie.style.top = thingie.offsetTop + step + \"px\"; updateEmo(false); } }\nfunction left() { if (checkXboundry(\"l\")) { thingie.style.left = thingie.offsetLeft - step + \"px\"; } updateEmo(true); }\nfunction right() { if (checkXboundry(\"r\")) { thingie.style.left = thingie.offsetLeft + step + \"px\"; } updateEmo(true); }\n\nfunction checkXboundry(dir) {\n    let x = thingie.offsetLeft, y = thingie.offsetTop, ok = [], len = Math.max(nogoX.length, nogoX2.length, nogoY.length, nogoY2.length);\n    for (let i = 0; i < len; i++) {\n        let check = (y < nogoY[i] || y > nogoY2[i] - size) ? 1 : 0;\n        if (dir === \"r\" && (x < nogoX[i] - size || x > nogoX2[i] - size)) check = 1;\n        if (dir === \"l\" && (x < nogoX[i] || x > nogoX2[i])) check = 1;\n        ok.push(check);\n    }\n    return ok.every(e => e > 0);\n}\n\nfunction checkYboundry(dir) {\n    let x = thingie.offsetLeft, y = thingie.offsetTop, ok = [], len = Math.max(nogoX.length, nogoX2.length, nogoY.length, nogoY2.length);\n    for (let i = 0; i < len; i++) {\n        let check = (x < nogoX[i] || x > nogoX2[i] - size) ? 1 : 0;\n        if (dir === \"u\" && (y < nogoY[i] || y > nogoY2[i])) check = 1;\n        if (dir === \"d\" && (y < nogoY[i] - size || y > nogoY2[i] - size)) check = 1;\n        ok.push(check);\n    }\n    return ok.every(e => e > 0);\n}\n\nfunction genSides() {\n    let max = mazeHeight / step, l1 = Math.floor(Math.random() * max) * step;\n    let lb1 = document.createElement(\"div\"); lb1.style.top = step + \"px\"; lb1.style.left = step + \"px\"; lb1.style.height = l1 + \"px\";\n    let lb2 = document.createElement(\"div\"); lb2.style.top = l1 + step * 2 + \"px\"; lb2.style.left = step + \"px\"; lb2.style.height = (mazeHeight - step - l1) + \"px\";\n    let rb1 = document.createElement(\"div\"); rb1.style.top = step + \"px\"; rb1.style.left = mazeWidth + step + \"px\"; rb1.style.height = (mazeHeight - step - l1) + \"px\";\n    let rb2 = document.createElement(\"div\"); rb2.style.top = l1 + step * 2 + \"px\"; rb2.style.left = mazeWidth + step + \"px\"; rb2.style.height = l1 + \"px\";\n\n    nogoX.push(0, mazeWidth + 2 * step, 0, 0, mazeWidth + step, mazeWidth + step);\n    nogoX2.push(0 + bwidth, mazeWidth + 2 * step + bwidth, step, step, mazeWidth + 2 * step, mazeWidth + 2 * step);\n    nogoY.push(l1 + step, (mazeHeight - step - l1) + step, l1 + step, l1 + 2 * step, (mazeHeight - step - l1) + step, (mazeHeight - step - l1) + 2 * step);\n    nogoY2.push(l1 + 2 * step, (mazeHeight - step - l1) + 2 * step, l1 + step + bwidth, l1 + 2 * step + bwidth, (mazeHeight - step - l1) + step + bwidth, (mazeHeight - step - l1) + 2 * step + bwidth);\n\n    thingie.style.top = l1 + step + \"px\"; thingie.style.left = 0 + \"px\";\n    home.style.top = (mazeHeight - step - l1) + step + \"px\"; home.style.left = mazeWidth + step + \"px\";\n\n    let els = [lb1, lb2, rb1, rb2]; for (let i = 0; i < els.length; i++) { confSideEl(els[i]); maze.appendChild(els[i]); }\n}\n\nfunction confSideEl(el) { el.setAttribute(\"class\", \"barrier\"); el.style.width = bwidth + \"px\"; }\n\nfunction genMaze(cx, cy, s) { let d = limShuffle(dirs, s); for (let i = 0; i < d.length; i++) { let nx = cx + modDir[d[i]].x, ny = cy + modDir[d[i]].y; grid[cy][cx].v = 1; if (nx >= 0 && nx < mx && ny >= 0 && ny < my && grid[ny][nx].v === 0) { grid[cy][cx][d[i]] = 1; grid[ny][nx][modDir[d[i]].o] = 1; genMaze(nx, ny, i); } } }\n\nfunction drawMaze() { for (let x = 0; x < mx; x++) for (let y = 0; y < my; y++) { let l = grid[y][x].l, r = grid[y][x].r, u = grid[y][x].u, d = grid[y][x].d; drawLines(x, y, l, r, u, d); } }\n\nfunction drawLines(x, y, l, r, u, d) { let top = (y + 1) * step, left = (x + 1) * step; if (l === 0 && x > 0) { let el = document.createElement(\"div\"); el.style.left = left + \"px\"; el.style.height = step + \"px\"; el.style.top = top + \"px\"; el.setAttribute(\"class\", \"barrier\"); el.style.width = bwidth + \"px\"; maze.appendChild(el); } if (d === 0 && y < my - 1) { let el = document.createElement(\"div\"); el.style.left = left + \"px\"; el.style.height = bwidth + \"px\"; el.style.top = top + step + \"px\"; el.setAttribute(\"class\", \"barrier\"); el.style.width = step + bwidth + \"px\"; maze.appendChild(el); } }\n\nfunction limShuffle(array, s) { let con = array.slice(0, s), ran = array.slice(s, array.length); for (let i = ran.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * (i + 1)); [ran[i], ran[j]] = [ran[j], ran[i]]; } return con.concat(ran); }\n\nfunction animKeys(key) { if (key.id === \"bu\") { key.style.border = \"3px #fff solid\"; key.style.borderTop = \"1px #fff solid\"; key.style.borderBottom = \"4px #fff solid\"; key.style.transform = \"translateY(-2px)\"; } if (key.id === \"bd\") { key.style.border = \"3px #fff solid\"; key.style.borderBottom = \"1px #fff solid\"; key.style.borderTop = \"4px #fff solid\"; key.style.transform = \"translateY(2px)\"; } if (key.id === \"bl\") { key.style.border = \"3px #fff solid\"; key.style.borderLeft = \"1px #fff solid\"; key.style.borderRight = \"4px #fff solid\"; key.style.transform = \"translateX(-2px)\"; } if (key.id === \"br\") { key.style.border = \"3px #fff solid\"; key.style.borderRight = \"1px #fff solid\"; key.style.borderLeft = \"4px #fff solid\"; key.style.transform = \"translateX(2px)\"; } setTimeout(() => { key.style.border = \"2px #fff solid\"; key.style.transform = \"translateY(0px)\"; key.style.transform = \"translateX(0px)\"; }, \"150\"); }\n\nlet maxl = 0, prevl = 0; function updateEmo(lr) { if (lr) { if (thingie.offsetLeft < maxl) emo.innerHTML = \"üôÑ\"; if (thingie.offsetLeft < maxl - 2 * step) emo.innerHTML = \"üòí\"; if (thingie.offsetLeft < maxl - 4 * step) emo.innerHTML = \"üò£\"; if (thingie.offsetLeft < maxl - 6 * step) emo.innerHTML = \"ü§¨\"; if (thingie.offsetLeft > prevl) emo.innerHTML = \"üòê\"; if (thingie.offsetLeft >= maxl) { if (thingie.offsetLeft > mazeWidth * 0.6) emo.innerHTML = \"üòÄ\"; else emo.innerHTML = \"üôÇ\"; maxl = thingie.offsetLeft; } if (thingie.offsetLeft === 0) emo.innerHTML = \"üò¢\"; if (thingie.offsetLeft > mazeWidth - step && thingie.offsetTop === home.offsetTop) { emo.innerHTML = \"ü§ó\"; home.innerHTML = \"üè†\"; } if (thingie.offsetLeft > mazeWidth) { emo.innerHTML = \"\"; home.innerHTML = \"ü•≥\"; } prevl = thingie.offsetLeft; } else { if (thingie.offsetLeft > mazeWidth - step && thingie.offsetTop === home.offsetTop) emo.innerHTML = \"ü§ó\"; else if (thingie.offsetLeft > mazeWidth - step && thingie.offsetTop != home.offsetTop) emo.innerHTML = \"üôÑ\"; } }\n\nwindow.addEventListener(\"deviceorientation\", handleOrientation);\nfunction tiltTimer() { allowTilt = false; setTimeout(() => { allowTilt = true; }, \"200\"); }\nfunction handleOrientation(e) { if (firstMove) { lastUD = e.beta; lastLR = e.gamma; firstMove = false; } if (allowTilt) { if (e.beta < lastUD - 15) { up(); tiltTimer(); } if (e.beta > lastUD + 15) { down(); tiltTimer(); } if (e.gamma < lastLR - 15) { left(); tiltTimer(); } if (e.gamma > lastLR + 15) { right(); tiltTimer(); } } }\n\nlet haveEvents = \"ongamepadconnected\" in window, gp = [], allowU = true, allowD = true, allowL = true, allowR = true, allowAU = true, allowAD = true, allowAL = true, allowAR = true;\nwindow.addEventListener(\"gamepadconnected\", connectGamepad);\nwindow.addEventListener(\"gamepaddisconnected\", disconnectGamepad);\nfunction disconnectGamepad() { gp = []; } function connectGamepad(e) { gp[0] = e.gamepad; requestAnimationFrame(updateStatus); }\nfunction updateStatus() { if (!haveEvents) scangamepads(); for (let i = 0; i < gp[0].buttons.length; i++) { if (gp[0].buttons[12].pressed && allowU) { up(); gpTimer(\"u\"); } if (!gp[0].buttons[12].pressed) allowU = true; if (gp[0].buttons[13].pressed && allowD) { down(); gpTimer(\"d\"); } if (!gp[0].buttons[13].pressed) allowD = true; if (gp[0].buttons[14].pressed && allowL) { left(); gpTimer(\"l\"); } if (!gp[0].buttons[14].pressed) allowL = true; if (gp[0].buttons[15].pressed && allowR) { right(); gpTimer(\"r\"); } if (!gp[0].buttons[15].pressed) allowR = true; } for (let j = 0; j < gp[0].axes.length; j++) { if ((gp[0].axes[1] < -0.8 || gp[0].axes[3] < -0.8) && allowAU) { up(); gpATimer(\"u\"); } if ((gp[0].axes[1] > 0.8 || gp[0].axes[3] > 0.8) && allowAD) { down(); gpATimer(\"d\"); } if ((gp[0].axes[0] < -0.8 || gp[0].axes[2] < -0.8) && allowAL) { left(); gpATimer(\"l\"); } if ((gp[0].axes[0] > 0.8 || gp[0].axes[2] > 0.8) && allowAR) { right(); gpATimer(\"r\"); } } requestAnimationFrame(updateStatus); }\nfunction scangamepads() { var gamepads = navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []; for (var i = 0; i < gamepads.length; i++) if (gamepads[i]) if (gamepads[i].index in gp) gp[gamepads[i].index] = gamepads[i]; else addgamepad(gamepads[i]); } if (!haveEvents) setInterval(scangamepads, 500);\nfunction gpTimer(adir) { switch (adir) { case \"u\": allowU = false; break; case \"d\": allowD = false; break; case \"l\": allowL = false; break; case \"r\": allowR = false; break; } setTimeout(() => { allowU = allowD = allowL = allowR = true; }, \"200\"); }\nfunction gpATimer(adir) { switch (adir) { case \"u\": allowAU = false; break; case \"d\": allowAD = false; break; case \"l\": allowAL = false; break; case \"r\": allowAR = false; break; } setTimeout(() => { allowAU = allowAD = allowAL = allowAR = true; }, \"200\"); }\n\nlet lasttouchpY = 0, lasttouchpX = 0; cont.addEventListener(\"touchstart\", (e) => { lasttouchpY = e.changedTouches[0].pageY; lasttouchpX = e.changedTouches[0].pageX; }); cont.addEventListener(\"touchmove\", (e) => { e.preventDefault(); let diffY = e.changedTouches[0].pageY - lasttouchpY, diffX = e.changedTouches[0].pageX - lasttouchpX; if (diffY > 15) { down(); lasttouchpY = e.changedTouches[0].pageY; } else if (diffY < -15) { up(); lasttouchpY = e.changedTouches[0].pageY; } if (diffX > 15) { right(); lasttouchpX = e.changedTouches[0].pageX; } else if (diffX < -15) { left(); lasttouchpX = e.changedTouches[0].pageX; } });\n\nlet lastscrollpY = 0, lastscrollpX = 0; cont.addEventListener(\"wheel\", (e) => { lastscrollpY += e.deltaY; if (lastscrollpY > 0 && e.deltaY < 0) lastscrollpY = 0; if (lastscrollpY < 0 && e.deltaY > 0) lastscrollpY = 0; if (lastscrollpY > 20) { up(); lastscrollpY = 0; } if (lastscrollpY < -20) { down(); lastscrollpY = 0; } lastscrollpX += e.deltaX; if (lastscrollpX > 0 && e.deltaX < 0) lastscrollpX = 0; if (lastscrollpX < 0 && e.deltaX > 0) lastscrollpX = 0; if (lastscrollpX > 20) { left(); lastscrollpX = 0; } if (lastscrollpX < -20) { right(); lastscrollpX = 0; } });"
    },
    {
      "image": "./images/slider.png",
      "card-title": "Round Image Slider",
      "card-text": "By Coder.in | 15 March 2025",
      "button-name": "HTML, CSS",
      "description": "An Animated Rounded Slider is a visually appealing UI component designed using HTML and CSS. It features smooth transition effects and a rounded track with a draggable handle. The animation enhances user interaction, providing a seamless sliding experience. CSS properties like border-radius, transition, and keyframes are used for styling and motion.",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n\n  <body>\n    <div class=\"slider\">\n      <div class=\"rotator\">\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/cf/7a/36/cf7a36857429dc03d225035febe17470.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/videos/thumbnails/originals/24/25/7f/24257fb306a204a3b9a27b9c3a3cade5.0000000.jpg\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/474x/cf/7a/36/cf7a36857429dc03d225035febe17470.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/474x/ce/05/bf/ce05bff83c690387685f766d3bc17515.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/1e/ad/6a/1ead6ac8a32da6be4640f936719b429e.jpg\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/eb/d2/1c/ebd21ca9424a90bd1b73d9f6a9823667.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/d8/16/06/d816065f2da59a8b5447b8fd470d114f.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/ac/4d/93/ac4d938a6b3f44bce75b38b15c06f367.jpg\" alt=\"items photo\" />\n        </div>\n        <div class=\"items\">\n          <img src=\"https://i.pinimg.com/736x/1a/81/ba/1a81ba513ba1ead4debb5fddd31c93e0.jpg\" alt=\"items photo\" />\n        </div>\n      </div>\n    </div>\n\n    </body>\n</html>",
      "css-code": "body {\n  background: #0c3c53\n}\n\n.slider {\n  position: relative;\n  width: 350px;\n  margin: 50px auto;\n  perspective: 1000px;\n  padding-top: 120px;\n}\n\n.rotator {\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: auto;\n  width: 55%;\n  height: 150px;\n  transform-style: preserve-3d;\n  animation: roter 29s linear infinite;\n}\n\n.items {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  border: 2px solid #0000;\n  border-radius: 17px;\n}\n\n.items img {\n  height: 100%;\n  width: 100%;\n  transition: all 3s ease;\n}\n\n.items:hover img {\n  transform: scale(1.1);\n}\n\n@keyframes roter {\n  from {\n    transform: rotateY(0deg);\n  }\n\n  to {\n    transform: rotateY(360deg);\n  }\n}\n\n.items:first-child {\n  transform: rotateY(calc(40deg)) translateZ(300px);\n}\n\n.items:nth-child(2) {\n  transform: rotateY(calc(80deg)) translateZ(300px);\n}\n\n.items:nth-child(3) {\n  transform: rotateY(calc(120deg)) translateZ(300px);\n}\n\n.items:nth-child(4) {\n  transform: rotateY(calc(160deg)) translateZ(300px);\n}\n\n.items:nth-child(5) {\n  transform: rotateY(calc(200deg)) translateZ(300px);\n}\n\n.items:nth-child(6) {\n  transform: rotateY(calc(240deg)) translateZ(300px);\n}\n\n.items:nth-child(7) {\n  transform: rotateY(calc(280deg)) translateZ(300px);\n}\n\n.items:nth-child(8) {\n  transform: rotateY(calc(320deg)) translateZ(300px);\n}\n\n.items:nth-child(9) {\n  transform: rotateY(calc(360deg)) translateZ(300px);\n}\n\n.rotator:hover {\n  animation-play-state: paused;\n}"
    },
    {
      "image": "./images/panda_login.png",
      "card-title": "Panda Login Page",
      "card-text": "By Coder.in | 17 March 2025",
      "button-name": "HTML, CSS & JS",
      "description": "This modern login page features smooth animations and a playful panda toy interaction. When a user enters their password, the panda closes its eyes, creating an engaging and delightful experience. The design includes glowing effects, fluid transitions, and a futuristic aesthetic. The responsive layout ensures compatibility across devices, making the login process more enjoyable. This stylish UI enhances user experience while maintaining functionality. üöÄüêº",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Interactive Panda Form</title>\n    <!-- Google Font -->\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <!-- Stylesheet -->\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <div class=\"container\">\n      <form>\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" placeholder=\"Username here...\" /><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password here...\" /><br>\n        <button>Login</button>\n      </form>\n      <div class=\"ear-l\"></div>\n      <div class=\"ear-r\"></div>\n      <div class=\"panda-face\">\n        <div class=\"blush-l\"></div>\n        <div class=\"blush-r\"></div>\n        <div class=\"eye-l\">\n          <div class=\"eyeball-l\"></div>\n        </div>\n        <div class=\"eye-r\">\n          <div class=\"eyeball-r\"></div>\n        </div>\n        <div class=\"nose\"></div>\n        <div class=\"mouth\"></div>\n      </div>\n      <div class=\"hand-l\"></div>\n      <div class=\"hand-r\"></div>\n      <div class=\"paw-l\"></div>\n      <div class=\"paw-r\"></div>\n    </div>\n    <!-- Script -->\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
      "css-code": "* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", sans-serif;\n}\nbody {\n  background-color: #f4c531;\n}\n.container {\n  height: 31.25em;\n  width: 31.25em;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 50%;\n  left: 50%;\n}\nform {\n  width: 23.75em;\n  height: 18.75em;\n  background-color: #ffffff;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: calc(50% + 3.1em);\n  left: 50%;\n  padding: 0 3.1em;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 0.5em;\n}\nform label {\n  display: block;\n  margin-bottom: 0.2em;\n  font-weight: 600;\n  color: #2e0d30;\n}\nform input {\n  font-size: 0.95em;\n  font-weight: 400;\n  color: #3f3554;\n  padding: 0.3em;\n  border: none;\n  border-bottom: 0.12em solid #3f3554;\n  outline: none;\n}\nform input:focus {\n  border-color: #f4c531;\n}\nform input:not(:last-child) {\n  margin-bottom: 0.9em;\n}\nform button {\n  font-size: 0.95em;\n  padding: 0.8em 0;\n  border-radius: 2em;\n  border: none;\n  outline: none;\n  background-color: #f4c531;\n  color: #2e0d30;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 0.15em;\n  margin-top: 0.8em;\n}\n.panda-face {\n  height: 7.5em;\n  width: 8.4em;\n  background-color: #ffffff;\n  border: 0.18em solid #2e0d30;\n  border-radius: 7.5em 7.5em 5.62em 5.62em;\n  position: absolute;\n  top: 2em;\n  margin: auto;\n  left: 0;\n  right: 0;\n}\n.ear-l,\n.ear-r {\n  background-color: #3f3554;\n  height: 2.5em;\n  width: 2.81em;\n  border: 0.18em solid #2e0d30;\n  border-radius: 2.5em 2.5em 0 0;\n  top: 1.75em;\n  position: absolute;\n}\n.ear-l {\n  transform: rotate(-38deg);\n  left: 10.75em;\n}\n.ear-r {\n  transform: rotate(38deg);\n  right: 10.75em;\n}\n.blush-l,\n.blush-r {\n  background-color: #ff8bb1;\n  height: 1em;\n  width: 1.37em;\n  border-radius: 50%;\n  position: absolute;\n  top: 4em;\n}\n.blush-l {\n  transform: rotate(25deg);\n  left: 1em;\n}\n.blush-r {\n  transform: rotate(-25deg);\n  right: 1em;\n}\n.eye-l,\n.eye-r {\n  background-color: #3f3554;\n  height: 2.18em;\n  width: 2em;\n  border-radius: 2em;\n  position: absolute;\n  top: 2.18em;\n}\n.eye-l {\n  left: 1.37em;\n  transform: rotate(-20deg);\n}\n.eye-r {\n  right: 1.37em;\n  transform: rotate(20deg);\n}\n.eyeball-l,\n.eyeball-r {\n  height: 0.6em;\n  width: 0.6em;\n  background-color: #ffffff;\n  border-radius: 50%;\n  position: absolute;\n  left: 0.6em;\n  top: 0.6em;\n  transition: 1s all;\n}\n.eyeball-l {\n  transform: rotate(20deg);\n}\n.eyeball-r {\n  transform: rotate(-20deg);\n}\n.nose {\n  height: 1em;\n  width: 1em;\n  background-color: #3f3554;\n  position: absolute;\n  top: 4.37em;\n  margin: auto;\n  left: 0;\n  right: 0;\n  border-radius: 1.2em 0 0 0.25em;\n  transform: rotate(45deg);\n}\n.nose:before {\n  content: \"\";\n  position: absolute;\n  background-color: #3f3554;\n  height: 0.6em;\n  width: 0.1em;\n  transform: rotate(-45deg);\n  top: 0.75em;\n  left: 1em;\n}\n.mouth,\n.mouth:before {\n  height: 0.75em;\n  width: 0.93em;\n  background-color: transparent;\n  position: absolute;\n  border-radius: 50%;\n  box-shadow: 0 0.18em #3f3554;\n}\n.mouth {\n  top: 5.31em;\n  left: 3.12em;\n}\n.mouth:before {\n  content: \"\";\n  position: absolute;\n  left: 0.87em;\n}\n.hand-l,\n.hand-r {\n  background-color: #3f3554;\n  height: 2.81em;\n  width: 2.5em;\n  border: 0.18em solid #2e0d30;\n  border-radius: 0.6em 0.6em 2.18em 2.18em;\n  transition: 1s all;\n  position: absolute;\n  top: 8.4em;\n}\n.hand-l {\n  left: 7.5em;\n}\n.hand-r {\n  right: 7.5em;\n}\n.paw-l,\n.paw-r {\n  background-color: #3f3554;\n  height: 3.12em;\n  width: 3.12em;\n  border: 0.18em solid #2e0d30;\n  border-radius: 2.5em 2.5em 1.2em 1.2em;\n  position: absolute;\n  top: 26.56em;\n}\n.paw-l {\n  left: 10em;\n}\n.paw-r {\n  right: 10em;\n}\n.paw-l:before,\n.paw-r:before {\n  position: absolute;\n  content: \"\";\n  background-color: #ffffff;\n  height: 1.37em;\n  width: 1.75em;\n  top: 1.12em;\n  left: 0.55em;\n  border-radius: 1.56em 1.56em 0.6em 0.6em;\n}\n.paw-l:after,\n.paw-r:after {\n  position: absolute;\n  content: \"\";\n  background-color: #ffffff;\n  height: 0.5em;\n  width: 0.5em;\n  border-radius: 50%;\n  top: 0.31em;\n  left: 1.12em;\n  box-shadow: 0.87em 0.37em #ffffff, -0.87em 0.37em #ffffff;\n}\n@media screen and (max-width: 500px) {\n  .container {\n    font-size: 14px;\n  }\n}",
      "js-code": "let usernameRef = document.getElementById(\"username\");\nlet passwordRef = document.getElementById(\"password\");\nlet eyeL = document.querySelector(\".eyeball-l\");\nlet eyeR = document.querySelector(\".eyeball-r\");\nlet handL = document.querySelector(\".hand-l\");\nlet handR = document.querySelector(\".hand-r\");\n\nlet normalEyeStyle = () => {\n  eyeL.style.cssText = `\n    left:0.6em;\n    top: 0.6em;\n  `;\n  eyeR.style.cssText = `\n  right:0.6em;\n  top:0.6em;\n  `;\n};\n\nlet normalHandStyle = () => {\n  handL.style.cssText = `\n        height: 2.81em;\n        top:8.4em;\n        left:7.5em;\n        transform: rotate(0deg);\n    `;\n  handR.style.cssText = `\n        height: 2.81em;\n        top: 8.4em;\n        right: 7.5em;\n        transform: rotate(0deg)\n    `;\n};\n//When clicked on username input\nusernameRef.addEventListener(\"focus\", () => {\n  eyeL.style.cssText = `\n    left: 0.75em;\n    top: 1.12em;  \n  `;\n  eyeR.style.cssText = `\n    right: 0.75em;\n    top: 1.12em;\n  `;\n  normalHandStyle();\n});\n//When clicked on password input\npasswordRef.addEventListener(\"focus\", () => {\n  handL.style.cssText = `\n        height: 6.56em;\n        top: 3.87em;\n        left: 11.75em;\n        transform: rotate(-155deg);    \n    `;\n  handR.style.cssText = `\n    height: 6.56em;\n    top: 3.87em;\n    right: 11.75em;\n    transform: rotate(155deg);\n  `;\n  normalEyeStyle();\n});\n//When clicked outside username and password input\ndocument.addEventListener(\"click\", (e) => {\n  let clickedElem = e.target;\n  if (clickedElem != usernameRef && clickedElem != passwordRef) {\n    normalEyeStyle();\n    normalHandStyle();\n  }\n});"
    },
    {
      "image": "./images/Animatedlogin_signup.png",
      "card-title": "Animated Login Signup",
      "card-text": "By Coder.in | 17 March 2025",
      "button-name": "HTML, CSS & JS",
      "description": "This modern login & signup page features a split-screen design with a clean and stylish UI. The left side offers a smooth login form, including social media login options and a password input field. The right side displays a gradient background with a welcoming message and a sign-up button. The bold typography and vibrant colors enhance the visual appeal. Its responsive layout and user-friendly design ensure a seamless experience across devices. üöÄ",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n\n    <div class=\"container\" id=\"container\">\n        <div class=\"form-container sign-up-container\">\n            <form action=\"#\">\n                <h1>Create Account</h1>\n                <div class=\"social-container\">\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-facebook-f\"></i></a>\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-google-plus-g\"></i></a>\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-linkedin-in\"></i></a>\n                </div>\n                <span>or use your email for registration</span>\n                <input type=\"text\" placeholder=\"Name\" />\n                <input type=\"email\" placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\" />\n                <button>Sign Up</button>\n            </form>\n        </div>\n        <div class=\"form-container log-in-container\">\n            <form action=\"#\">\n                <h1>Log in</h1>\n                <div class=\"social-container\">\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-facebook-f\"></i></a>\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-google-plus-g\"></i></a>\n                    <a href=\"#\" class=\"social\"><i class=\"fab fa-linkedin-in\"></i></a>\n                </div>\n                <span>or use your account</span>\n                <input type=\"email\" placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\" />\n                <a href=\"#\">Forgot your password?</a>\n                <button>Log In</button>\n            </form>\n        </div>\n        <div class=\"overlay-container\">\n            <div class=\"overlay\">\n                <div class=\"overlay-panel overlay-left\">\n                    <h1>Welcome Back!</h1>\n                    <p>Already have an account? Log In</p>\n                    <button class=\"ghost\" id=\"logIn\">Log In</button>\n                </div>\n                <div class=\"overlay-panel overlay-right\">\n                    <h1>Hello, There!</h1>\n                    <p>Don't have an account? Sign Up Free</p>\n                    <button class=\"ghost\" id=\"signUp\">Sign Up</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n</html>",
      "css-code": "* {\n    box-sizing: border-box;\n}\n\nbody {\n    background: #0E1119;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    font-family: 'Poppins', sans-serif;\n    height: 100vh;\n    margin: -20px 0 50px;\n}\n\nh1 {\n    font-weight: bold;\n    margin: 0;\n}\n\nh2 {\n    text-align: center;\n}\n\np {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 20px;\n    letter-spacing: 0.5px;\n    margin: 20px 0 30px;\n}\n\nspan {\n    font-size: 12px;\n}\n\na {\n    color: #333;\n    font-size: 14px;\n    text-decoration: none;\n    margin: 15px 0;\n}\n\nbutton {\n    border-radius: 20px;\n  border: none;\n    background-color: #3F2EFF;\n    color: #FFFFFF;\n    font-size: 12px;\n    font-weight: bold;\n    padding: 12px 45px;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    transition: transform 80ms ease-in;\n}\n\nbutton:active {\n    transform: scale(0.95);\n}\n\nbutton:focus {\n    outline: none;\n}\n\nbutton.ghost {\n    background-color: transparent;\n      border: 1px solid #FFFFFF;   \n\n    transition: 0.5s;\n}\n\nbutton.ghost:hover {\n    background-color: #FFFFFF;\n    color: #0E1119;\n    cursor: pointer;\n}\n\nform {\n    background-color: #FFFFFF;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    padding: 0 50px;\n    height: 100%;\n    text-align: center;\n}\n\ninput {\n    background-color: #eee;\n    border: none;\n    padding: 12px 15px;\n    margin: 8px 0;\n    width: 100%;\n}\n\n.container {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n    position: relative;\n    overflow: hidden;\n    width: 768px;\n    max-width: 100%;\n    min-height: 480px;\n}\n\n.form-container {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    transition: all 0.6s ease-in-out;\n}\n\n.log-in-container {\n    left: 0;\n    width: 50%;\n    z-index: 2;\n}\n\n.container.right-panel-active .log-in-container {\n    transform: translateX(100%);\n}\n\n.sign-up-container {\n    left: 0;\n    width: 50%;\n    opacity: 0;\n    z-index: 1;\n}\n\n.container.right-panel-active .sign-up-container {\n    transform: translateX(100%);\n    opacity: 1;\n    z-index: 5;\n    animation: show 0.6s;\n}\n\n@keyframes show {\n\n    0%,\n    49.99% {\n        opacity: 0;\n        z-index: 1;\n    }\n\n    50%,\n    100% {\n        opacity: 1;\n        z-index: 5;\n    }\n}\n\n.overlay-container {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    width: 50%;\n    height: 100%;\n    overflow: hidden;\n    transition: transform 0.6s ease-in-out;\n    z-index: 100;\n}\n\n.container.right-panel-active .overlay-container {\n    transform: translateX(-100%);\n}\n\n.overlay {\n    background: #FF416C;\n    background: linear-gradient(142.18deg, #3793FF 0%, #FE368A 98.85%);\n\n\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 0 0;\n    color: #FFFFFF;\n    position: relative;\n    left: -100%;\n    height: 100%;\n    width: 200%;\n    transform: translateX(0);\n    transition: transform 0.6s ease-in-out;\n}\n\n.container.right-panel-active .overlay {\n    transform: translateX(50%);\n}\n\n.overlay-panel {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    padding: 0 40px;\n    text-align: center;\n    top: 0;\n    height: 100%;\n    width: 50%;\n    transform: translateX(0);\n    transition: transform 0.6s ease-in-out;\n}\n\n.overlay-left {\n    transform: translateX(-20%);\n}\n\n.container.right-panel-active .overlay-left {\n    transform: translateX(0);\n}\n\n.overlay-right {\n    right: 0;\n    transform: translateX(0);\n}\n\n.container.right-panel-active .overlay-right {\n    transform: translateX(20%);\n}\n\n.social-container {\n    margin: 20px 0;\n}\n\n.social-container a {\n    border: 1px solid #DDDDDD;\n    border-radius: 50%;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 5px;\n    height: 40px;\n    width: 40px;\n}",
      "js-code": "setTimeout(() => {\n    const signUpButton = document.getElementById('signUp');\n    const logInButton = document.getElementById('logIn');\n    const container = document.getElementById('container');\n\n    console.log('signUpButton:', signUpButton);\n    console.log('logInButton:', logInButton);\n    console.log('container:', container);\n\n    signUpButton.addEventListener('click', () => {\n        console.log('Sign Up button clicked');\n        container.classList.add(\"right-panel-active\");\n    });\n\n    logInButton.addEventListener('click', () => {\n        console.log('Log In button clicked');\n        container.classList.remove(\"right-panel-active\");\n    });\n}, 0);"
    },
    {
      "image": "./images/coder.png",
      "card-title": "Coder Text Animated",
      "card-text": "By Coder.in | 17 March 2025",
      "button-name": "HTML, CSS",
      "description": "The animated light text slider features a sleek and modern design with a glowing effect. The text smoothly transitions, giving a futuristic neon look on a dark background. The blinking cursor effect adds a coding-inspired touch, making it perfect for developer portfolios or tech-related websites. The animation is achieved using CSS keyframes for a smooth and engaging user experience. This minimal yet eye-catching design enhances the website‚Äôs aesthetics while maintaining readability. üöÄ",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Card</title>\n  </head>\n\n  <body>\n    <button class=\"button\" data-text=\"Awesome\">\n      <span class=\"actual-text\"> Coder.in </span>\n      <span aria-hidden=\"true\" class=\"hover-text\"> Coder.in </span>\n    </button>\n  </body>\n</html>",
      "css-code": "body {\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #111;\n}\n/* === removing default button style ===*/\n.button {\n    margin: 0;\n    height: auto;\n    background: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n}\n\n/* button styling */\n.button {\n    --border-right: 6px;\n    --text-stroke-color: rgba(255, 255, 255, 0.6);\n    --animation-color: #37FF8B;\n    --fs-size: 2em;\n    letter-spacing: 3px;\n    text-decoration: none;\n    font-size: var(--fs-size);\n    font-family: 'Poppins', sans-serif;\n    position: relative;\n    text-transform: uppercase;\n    color: transparent;\n    -webkit-text-stroke: 1px var(--text-stroke-color);\n}\n\n/* this is the text, when you hover on button */\n.hover-text {\n    position: absolute;\n    box-sizing: border-box;\n    content: attr(data-text);\n    color: var(--animation-color);\n    width: 0%;\n    inset: 0;\n    border-right: var(--border-right) solid var(--animation-color);\n    overflow: hidden;\n    transition: 0.5s;\n    -webkit-text-stroke: 1px var(--animation-color);\n}\n\n/* hover */\n.button:hover .hover-text {\n    width: 100%;\n    filter: drop-shadow(0 0 23px var(--animation-color))\n}"
    },
    {
      "image": "./images/code_driven.png",
      "card-title": "Code Driven Animated",
      "card-text": "By Coder.in | 17 March 2025",
      "button-name": "HTML, CSS",
      "description": "This **looping round animation** features a **dynamic text effect** that continuously rotates, creating a visually engaging motion. The words **\"ANIMATION,\" \"DRIVEN,\" and \"CODE\"** appear in a smooth, circular movement, adding depth and fluidity to the design. The text scales and shifts in perspective, giving an **immersive 3D-like effect**. This type of animation is perfect for **tech-related websites, portfolios, or digital art projects**. Achieved using **CSS animations and keyframes**, it ensures a seamless and captivating experience for viewers. üöÄ",
      "html-code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <script defer src=\"https://unpkg.com/gsap@3/dist/gsap.min.js\"></script>\n    <script defer src=\"main.js\"></script>\n    <title>Document</title>\n</head>\n<body>\n    <div class=\"pov\">\n        <div class=\"tray\">\n          <div class=\"die\">\n            <div class=\"cube\">\n              <div class=\"face\" style=\"font-size:60px\">CODE</div>\n              <div class=\"face\" style=\"font-size:58px\">DRIVEN</div>\n              <div class=\"face\" style=\"font-size:55px\">ANIMATION</div>      \n            </div>\n          </div>  \n          <!-- clones will go here -->\n        </div>\n      </div>\n</body>\n</html>",
      "css-code": "/* Copyright (c) 2024 by Tom Miller (https://codepen.io/creativeocean/pen/ByBogvj) */\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap');\n\nhtml, body {\n  font-family: \"Montserrat\", sans-serif;\n  font-optical-sizing: auto;\n  font-weight: 900;\n  font-style: normal;\n  background:#000;\n  overflow:hidden;\n}\n\nbody, pov {\n  width:100%;\n  height:100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.die {\n  width: 400px;\n  height: 55px;\n  padding-bottom: 9px;\n  perspective: 999px;\n}\n\n.cube {\n  position: absolute;\n  width:100%;\n  height:100%;\n  transform-style: preserve-3d;\n}\n\n.face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backface-visibility: hidden;\n}",
      "js-code": "const n = 19\nconst rots = [\n  { ry: 270, a:0.5 },\n  { ry: 0,   a:0.85 },\n  { ry: 90,  a:0.4 },\n  { ry: 180, a:0.0 }\n]\n\ngsap.set(\".face\", {\n  z: 200,\n  rotateY: i => rots[i].ry,\n  transformOrigin: \"50% 50% -201px\"\n});\n\nfor (let i=0; i<n; i++){\n  let die = document.querySelector('.die')\n  let cube = die.querySelector('.cube')\n  \n  if (i>0){    \n    let clone = document.querySelector('.die').cloneNode(true);\n    document.querySelector('.tray').append(clone);\n    cube = clone.querySelector('.cube')\n  }\n  \n  gsap.timeline({repeat:-1, yoyo:true, defaults:{ease:'power3.inOut', duration:1}})\n  .fromTo(cube, {\n    rotateY:-90\n  },{\n    rotateY:90,\n    ease:'power1.inOut',\n    duration:2\n  })\n  .fromTo(cube.querySelectorAll('.face'), {\n    color:(j)=>'hsl('+(i/n*75+130)+', 67%,'+(100*[rots[3].a, rots[0].a, rots[1].a][j])+'%)'\n  },{\n    color:(j)=>'hsl('+(i/n*75+130)+', 67%,'+(100*[rots[0].a, rots[1].a, rots[2].a][j])+'%)'\n  }, 0)\n  .to(cube.querySelectorAll('.face'), {\n    color:(j)=>'hsl('+(i/n*75+130)+', 67%,'+(100*[rots[1].a, rots[2].a, rots[3].a][j])+'%)'\n  }, 1)\n  .progress(i/n)\n}\n\ngsap.timeline()\n  .from('.tray', {yPercent:-3, duration:2, ease:'power1.inOut', yoyo:true, repeat:-1}, 0)\n  .fromTo('.tray', {rotate:-15},{rotate:15, duration:4, ease:'power1.inOut', yoyo:true, repeat:-1}, 0)\n  .from('.die', {duration:0.01, opacity:0, stagger:{each:-0.05, ease:'power1.in'}}, 0)\n  .to('.tray', {scale:1.2, duration:2, ease:'power3.inOut', yoyo:true, repeat:-1}, 0)\n\nwindow.onload = window.onresize = ()=> {\n  const h = n*56\n  gsap.set('.tray', {height:h})\n  gsap.set('.pov', {scale:innerHeight/h})\n}"
    }
  ]
}
